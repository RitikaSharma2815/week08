name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: 'AKS cluster'
        required: true
        default: 'aks-week08'
      aks_resource_group:
        description: 'AKS resource group'
        required: true
        default: 'rg-week08'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            -g ${{ github.event.inputs.aks_resource_group }} \
            -n ${{ github.event.inputs.aks_cluster_name }} \
            --overwrite-existing

      - name: Apply frontend ConfigMap and manifests
        run: |
          kubectl create namespace shop --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s/frontend-config.yaml
          kubectl apply -f k8s/frontend.yaml
          kubectl get all -n shop

      - name: Wait for Frontend External IP
        run: |
          SVC=frontend-service-w08e1
          echo "Waiting for $SVC external IP (up to 10 minutes)..."
          FRONTEND_IP=""
          for i in $(seq 1 120); do
            FRONTEND_IP=$(kubectl get svc $SVC -n shop -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || true)
            if [ -z "$FRONTEND_IP" ]; then
              FRONTEND_IP=$(kubectl get svc $SVC -n shop -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null || true)
            fi
            echo "Attempt $i: ${FRONTEND_IP:-<pending>}"
            [ -n "$FRONTEND_IP" ] && break
            sleep 5
          done

          if [ -z "$FRONTEND_IP" ]; then
            echo "Timed out waiting for frontend LB."
            kubectl get svc $SVC -n shop -o wide || true
            exit 1
          fi

          echo "FRONTEND_IP=$FRONTEND_IP" >> $GITHUB_ENV
          echo "Frontend URL: http://$FRONTEND_IP/"

      - name: Logout from Azure
        if: always()
        run: az logout
